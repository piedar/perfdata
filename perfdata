#!/bin/bash
# SPDX-License-Identifier: AGPL-3.0-only

function debug() {
	echo >&2 "${0}: ${@}"
}

(return 0 2>/dev/null) && debug "this script cannot be sourced" && return 1

set -e

function die() {
	debug "${@}"
	exit 1
}

function hashsum() {
	sha256sum "${@}" | awk '{ print $1 }'
}

SCRIPT_DIR="$(dirname "$(realpath "${BASH_SOURCE[@]})")")"


COMMAND="${1:?COMMAND not specified}"

EXE_PATH="$(type -p "${COMMAND}" || true)"
if [ -z "${EXE_PATH}" ]; then
	debug "COMMAND ${COMMAND} has no executable path (is it a shell builtin?)"
	exec "${@}"
fi

if [ -z "${PERFDATA_PROFILE_DIR}" ]; then
	EXE_NAME="$(basename "$(realpath "${EXE_PATH}")")"
	: "${PERFDATA_DIR:=${XDG_CACHE_HOME:-${HOME:?}/.cache}/perfdata}"
	: "${PERFDATA_PROFILE:=${EXE_NAME}}"
	PERFDATA_PROFILE_DIR="${PERFDATA_DIR}/${PERFDATA_PROFILE}"
fi

: "${PERFDATA_STAMP:=$(hashsum "${EXE_PATH}")}"
PERFDATA_ID="${PERFDATA_STAMP}-$(date --utc +'%s')-$$"
PERFDATA_JOB_DIR="${PERFDATA_PROFILE_DIR}/${PERFDATA_ID}.perfdata"
mkdir -p "${PERFDATA_JOB_DIR}"

# todo: re-enable cleanup
#PERFDATA_PROFILE_DIR="${PERFDATA_PROFILE_DIR}" "${SCRIPT_DIR}/perfdata-cleanup"

# compression uses extra cpu time - much more at higher levels
# compression levels >= 10 cause lost samples on my system
# compression has diminishing returns after about level 8

# todo: might rely on EXE_CACHE instead of buildid

flock --exclusive --timeout 10 --no-fork "${PERFDATA_JOB_DIR}" \
	perf record --branch-filter 'any,u' --mmap-flush=128K \
	--switch-output=1G --no-no-buildid \
	--output "${PERFDATA_JOB_DIR}/perfdata" -- "${@}"

# with --switch-output there are 1 or more files named like ${PERFDATA_OUTPUT}.{timestamp}
# --switch-output cannot be read by perf-script when compressed?

# the output of llvm-profgen is tiny by comparison
# do the conversion now if so configured
if "${PERFDATA_CONVERT_PROF:-false}"; then
	PROF_OUTPUT="${PERFDATA_JOB_DIR}.prof"
	debug "converting ${PROF_OUTPUT} in the background"
	nohup "${SCRIPT_DIR}/perfdata-mkprof" "${PERFDATA_JOB_DIR}" \
		--binary "${EXE_PATH}" --output "/dev/null" >&"${PROF_OUTPUT}.log" &
else
	chmod -R ug+rX "${PERFDATA_JOB_DIR}"
fi
